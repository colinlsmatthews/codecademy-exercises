/*
In the example below, .container represents a container div. It is set
to a width of 50% (half of the browser’s width, in this example) and a
height of 200 pixels. Setting overflow to hidden ensures that any
content with dimensions larger than the container will be hidden from
view.

The second CSS rule ensures that images scale with the width of the
container. The height property is set to auto, meaning an image’s height
will automatically scale proportionally with the width. Finally, the
last line will display images as block level elements (rather than
inline-block, their default state). This will prevent images from
attempting to align with other content on the page (like text), which
can add unintended margin to the images.

It’s worth memorizing the entire example below. It represents a very
common design pattern used to scale images and videos proportionally.

Note: The example below scales the width of an image (or video) to the
width of a container. If the image is larger than the container, the
vertical portion of the image will overflow and will not display. To
swap this behavior, you can set max-height to 100% and width to auto
(essentially swapping the values). This will scale the height of the
image with the height of the container instead. If the image is larger
than the container, the horizontal portion of the image will overflow
and not display.
*/

.container {
    width: 50%;
    height: 200px;
    overflow: hidden;
  }
  
  .container img {
    max-width: 100%;
    height: auto;
    display: block;
  }
  